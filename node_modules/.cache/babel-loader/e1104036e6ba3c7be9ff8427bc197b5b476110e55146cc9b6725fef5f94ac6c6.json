{"ast":null,"code":"var _jsxFileName = \"/Users/rahulagarwal/Desktop/Tic-Tac-Toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const [ascending, setAscending] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [moveHistory, setMoveHistory] = useState(Array(0));\n  function handlePlay(nextSquares, moveHistory) {\n    //Creates new array that contains all items till current move followed by nextSquares\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    //When the move made, update last move ot be current set of squares\n    setHistory(nextHistory);\n    //Each time move made, update currentMove to point to latest entry history\n    setCurrentMove(nextHistory.length - 1);\n    setMoveHistory(moveHistory);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    let tempRow = Math.floor(moveHistory[move] / 3) + 1;\n    let tempCol = moveHistory[move] % 3 + 1;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You are at move \", move, \" at position (\", tempRow, \", \", tempCol, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, move, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this);\n  });\n  if (!ascending) {\n    moves.reverse();\n  }\n  function toggleSort() {\n    setAscending(!ascending); //Changes the boolean flag\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        moveHistory: moveHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleSort(),\n        children: ascending ? \"Sort descending\" : \"Sort Ascending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"Ymr9hrt98pwjEntEBf6l/HOKNlg=\");\n_c = Game;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  moveHistory\n}) {\n  function handleClick(i) {\n    if (squares[i] /*|| calculateWinner(squares)*/) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    const moveHistoryCopy = moveHistory.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n      moveHistoryCopy.push(i);\n    } else {\n      nextSquares[i] = \"O\";\n      moveHistoryCopy.push(i);\n    }\n    onPlay(nextSquares, moveHistoryCopy);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + squares[winner[0]];\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const board = [];\n  for (let row = 0; row < 3; row++) {\n    let boardRow = [];\n    for (let col = 0; col < 3; col++) {\n      let index = row * 3 + col;\n      const isWinner = winner ? winner.includes(index) : false;\n      boardRow.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[index],\n        onSquareClick: () => handleClick(index),\n        isWinner: isWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this));\n    }\n    board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: boardRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), board]\n  }, void 0, true);\n}\n_c2 = Board;\nfunction Square({\n  value,\n  onSquareClick,\n  isWinner\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: isWinner ? \"square-winner\" : \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Square;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      console.log([a, b, c]);\n      //return squares[a];\n      let winningCombo = [a, b, c];\n      return winningCombo;\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Square\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","ascending","setAscending","history","setHistory","Array","fill","currentMove","setCurrentMove","xIsNext","currentSquares","moveHistory","setMoveHistory","handlePlay","nextSquares","nextHistory","slice","length","jumpTo","nextMove","moves","map","squares","move","description","tempRow","Math","floor","tempCol","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","reverse","toggleSort","className","Board","onPlay","_c","handleClick","i","moveHistoryCopy","push","winner","calculateWinner","status","board","row","boardRow","col","index","isWinner","includes","Square","value","onSquareClick","_c2","_c3","lines","a","b","c","console","log","winningCombo","$RefreshReg$"],"sources":["/Users/rahulagarwal/Desktop/Tic-Tac-Toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nexport default function Game() {\n\n    const [ascending, setAscending] = useState(true);\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [currentMove, setCurrentMove] = useState(0);\n    const xIsNext = currentMove % 2 === 0;\n    const currentSquares = history[currentMove];\n\n    const [moveHistory, setMoveHistory] = useState(Array(0));\n\n    function handlePlay(nextSquares, moveHistory) {\n        //Creates new array that contains all items till current move followed by nextSquares\n        const nextHistory = [...history.slice(0, currentMove + 1), nextSquares]\n        //When the move made, update last move ot be current set of squares\n        setHistory(nextHistory);\n        //Each time move made, update currentMove to point to latest entry history\n        setCurrentMove(nextHistory.length - 1);\n\n        setMoveHistory(moveHistory);\n    }\n\n    function jumpTo(nextMove) {\n        setCurrentMove(nextMove);\n    }\n\n    const moves = history.map((squares, move) => {\n        let description;\n        if (move > 0) {\n          description = 'Go to move #' + move;\n        } else {\n          description = 'Go to game start';\n        }\n\n        let tempRow = Math.floor(moveHistory[move] / 3) + 1;\n        let tempCol = moveHistory[move] % 3 + 1;\n\n        return (\n          <li key={move}>\n            <button onClick={() => jumpTo(move)}>{description}</button>\n            <div>You are at move {move} at position ({tempRow}, {tempCol})</div>\n          </li>\n        );\n      });\n\n      if (!ascending) {\n        moves.reverse();\n      }\n\n    function toggleSort() {\n        setAscending(!ascending); //Changes the boolean flag\n    }\n\n    return (\n        <div className = \"game\">\n            <div className = \"game-board\">\n                <Board xIsNext={xIsNext} squares = {currentSquares} onPlay={handlePlay} moveHistory={moveHistory}/>\n            </div>\n            <div className = \"game-info\">\n                <ol>{moves}</ol>\n            </div>\n            <div>\n                <button onClick = {() => toggleSort()}>{ascending ? \"Sort descending\" : \"Sort Ascending\"}</button>\n            </div>\n        </div>\n    );\n}\n\nfunction Board({xIsNext, squares, onPlay, moveHistory}) {\n\n  function handleClick(i) {\n\n    if (squares[i]/*|| calculateWinner(squares)*/) {\n        return;\n    }\n    const nextSquares = squares.slice();\n\n    const moveHistoryCopy = moveHistory.slice();\n\n\n    if (xIsNext) {\n        nextSquares[i] = \"X\";\n        moveHistoryCopy.push(i);\n    } else {\n        nextSquares[i] = \"O\";\n        moveHistoryCopy.push(i);\n    }\n    onPlay(nextSquares, moveHistoryCopy);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + squares[winner[0]];\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const board = [];\n\n  for (let row = 0; row < 3; row++) {\n    let boardRow = [];\n    for (let col = 0; col < 3; col++) {\n      let index = row * 3 + col;\n      const isWinner = winner ? winner.includes(index) : false;\n      boardRow.push(<Square\n                     value = {squares[index]}\n                     onSquareClick = {() => handleClick(index)}\n                     isWinner = {isWinner} />);\n    }\n    board.push(<div className=\"board-row\">{boardRow}</div>)\n  }\n\n  return (\n      <>\n        <div className=\"status\">{status}</div>\n        {board}\n      </>\n    );\n}\n\nfunction Square({value, onSquareClick, isWinner}) {\n\n    return <button\n        className= {isWinner ? \"square-winner\" : \"square\"}\n        onClick = {onSquareClick}>\n            { value }\n        </button>;\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      console.log([a,b,c]);\n      //return squares[a];\n      let winningCombo = [a, b, c];\n      return winningCombo;\n    }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}